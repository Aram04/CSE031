Lab10 TPS Activity

Aram Shkhyan
Marcelo Rodriguez 
Hajin Park

Activity 1

1. Cache is a smaller, high-speed type of volatile computer memory that provides high-speed data access to a processor and stores frequently used computer programs, applications, and data.
Cache is needed to reduce the average time to access data from the main memory (RAM), as accessing data from cache is faster compared to accessing it from RAM. It helps improve the overall speed and performance of a computer system.

4. Given block size = 16 B, offset bits needed = log2(16) = 4 bits.
The number of bits in offset as a function of block size is log2(block size).

5. Given blocks in a cache, index bits needed = log2(64) = 6 bits.
The number of bits in index as a function of the number of blocks is log2(number of blocks).

6. Total size of the cache = Block size x Number of blocks.

7. Left-over bits are used for the tag field in the cache.
They are important for cache management to ensure that the correct data is retrieved.

8. 

a. Main memory size = 2^20 bytes.

b. Offset bits = log2(8) = 3 bits.

c. Number of blocks in the cache = 128/8 = 16 blocks.

d. Index bits = log2(16) = 4 bits.

e. Tag bits = 20-(3+4) = 13 bits.

f.

Index   Block       Tag      Valid  Dirty
     -------------------------------------
00000|         |            |      |     |
     |------------------------------------
00001|         |            |      |     |
     |------------------------------------
00010|         |            |      |     |
     |------------------------------------
00011|         |            |      |     |
     |------------------------------------
00100|         |            |      |     |
     -------------------------------------

g. Number of bits per row = 13 (tag) + 1 (valid bit) + 1 (dirty bit) + 64 (data block) = 79 bits.

Activity 2

1. Redundant conflict misses can be a downside of a direct-mapped cache. This kind of cache miss happens when several data blocks from the 
primary memory get mapped to an identical cache line because they share the same index. If these blocks are accessed regularly, they can end up in a cycle of constant replacement of each other,
thereby diminishing the cacheâ€™s efficiency.

3.
1024/4 = 256 sets.
256 sets requires 8 index bits.
The number of index bits required is a function of Log_2(number of blocks/associativity).

4. 

a. 2^20 = 1,048,576 bytes.

b. Log 2(8) = 3 8-byte blocks require 3 offset bits. 

c. 128/8 = 16 blocks.

d. 16 blocks/2 = 8 sets.

e. Log 2(8) = 3 8 sets requires 3 index bits.

f. 20 - 3 - 3 = 14 tag bits.

g. 

                    Block 1                              Block 2
Index   Block       Tag      Valid  Dirty[]  Block       Tag      Valid  Dirty
     ==========================================================================
00000|         |            |      |     []         |            |      |     |
     |=========================================================================
00001|         |            |      |     []         |            |      |     |
     |=========================================================================
00010|         |            |      |     []         |            |      |     |
     |=========================================================================
00011|         |            |      |     []         |            |      |     |
     |=========================================================================
00100|         |            |      |     []         |            |      |     |
     |=========================================================================

h. 
tag: 14 bits.
valid: 1 bit.
dirty: 1 bit.
data: 2 x 64 = 128 bits.
14 + 1 + 1 + 128 = 144 bits per row.





